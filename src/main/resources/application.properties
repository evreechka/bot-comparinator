server.port=8080

telegram.url=https://api.telegram.org/
telegram.bot-name=comparinator
telegram.username=cloudItmobot
telegram.bot-token=5577421378:AAHERPgPyeEjiY5REY1wS-qXv11aLdCo-tw

spring.kafka.consumer.bootstrap-servers=rc1a-8or9ad4qd22jf1gu.mdb.yandexcloud.net:9091
spring.kafka.consumer.group-id=photo-bot
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanisms=SCRAM-SHA-512
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="user_mari" password="qwerty12345" serviceName="bot_kafka_cluster";
#spring.kafka.properties.sasl.kerberos.service.name=c9q8g82f5psgbjr0b7ce

spring.kafka.producer.bootstrap-servers=rc1a-8or9ad4qd22jf1gu.mdb.yandexcloud.net:9091
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.datasource.url=jdbc:postgresql://c-c9qe1ff6s0af4dk52se2.rw.mdb.yandexcloud.net:6432/photo_db
spring.datasource.username=mari
spring.datasource.password=marimari
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
